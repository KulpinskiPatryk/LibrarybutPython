{% extends 'basic.html' %}
{% load static %}
{% block title %} Library Management System {% endblock %}
{% block css %}
{% endblock %}
{% block body %}
<div class="container">
<br>
<h1 class="text-center"><u>Admin Login</u></h1><br>
<p><b>Note:</b> Only the admin can login from here. No student will be allowed to login.</p>
    <form method="POST"> {% csrf_token %}

    <div class="row mt-4">
        <div class="form-group col-md-12">
            <label><i style="font-weight: bold;">Username</i></label>
            <input type="text" class="form-control mt-2" name="username" placeholder="Enter Username" required>
        </div>
    </div>

    <div class="row mt-4">
        <div class="form-group col-md-12">
            <label><i style="font-weight: bold;">Password</i></label>
            <input type="password" class="form-control mt-2" name="password" placeholder="Enter Password" required>
        </div>
    </div>
    <button type="submit" class="btn btn-outline-primary mt-4">Login</button>
</div>
{% endblock %}
{% block js %}
<script>
    {% if alert %}
    alert("Invalid Username or Password.")
    document.location = "/admin_login"
    {% endif %}
</script>
{% endblock %}



def admin_login(request):
    if request.method == "POST":
        username = request.POST['username']
        password = request.POST['password']
        user = authenticate(username=username, password=password)

        if user is not None:
            login(request, user)
            if request.user.is_superuser:
                return redirect("/add_book")
            else:
                return HttpResponse("You are not an admin.")
        else:
            alert = True
            return render(request, "admin_login.html", {'alert':alert})
    return render(request, "admin_login.html")

def Logout(request):
    logout(request)
    return redirect ("/")


@login_required(login_url = '/Login')

def add_book(request):
    if request.method == "POST":
        name = request.POST['name']
        author = request.POST['author']
        isbn = request.POST['isbn']
        category = request.POST['category']

        books = Book.objects.create(name=name, author=author, isbn=isbn, category=category)
        books.save()
        alert = True
        return render(request, "add_book.html", {'alert':alert})
    return render(request, "add_book.html")